@model CadeODinheiro.Core.DTO.ExpIncAgrupadorModel
@{
    ViewBag.Title = "LancamentoAgrupado";
    Layout = "~/Views/Shared/_ContentFormLayout.cshtml";
}

@section headerWidget{
    <h2>Lançamento Agrupado</h2>
    &nbsp;&nbsp;<i id="divLoading" style="display: none" class="fa fa-cog fa-2x fa-spin"></i>
}
@using (Ajax.BeginForm("LancamentoAgrupado", "ExpenseIncome", new AjaxOptions()
{
    HttpMethod = "Post",
    LoadingElementId = "divLoading",
    OnSuccess = "retornoProcessamento"
},
    new { @class = "smart-form", @id = "formLancamento" }))
{
    @Html.AntiForgeryToken()
    <fieldset>
        <section>
            <div style="color:red;">
                @Html.ValidationSummary()
            </div>
        </section>
        @Html.TextBoxFor(e => e.sAgrupadorID, new { @readonly = "readonly", style = "display: none;" })
        @*@Html.TextBoxFor(e => e.sNotificationID, new { @readonly = "readonly", style = "display: none;" })*@
        <div class="row">
            <section class="col col-12">
                <label class="label">@Html.LabelFor(e => e.sDescricao)</label>
                <label class="input">
                    @Html.EditorFor(e => e.sDescricao)
                </label>
            </section>
        </div>
        <div class="row">
            <section class="col col-6">
                <label class="label">@Html.LabelFor(e => e.sCategoryID)</label>
                <label class="select">
                    @Html.DropDownListFor(x => x.sCategoryID, Model.listaCategorias, new { @class = "input-sm" })
                    <i></i>
                </label>
            </section>
        </div>
        <div class="row">
            <section class="col col-6">
                <label class="label">@Html.LabelFor(e => e.sNotificationID)</label>
                <label class="select">
                    @Html.DropDownListFor(x => x.sNotificationID, Model.listaNotifications, new { @class = "input-sm" })
                    <i></i>
                </label>
            </section>
            <div id="divMostrarOpcaoDataBase" style="display: none;">
                <section class="col col-3">
                    <label class="label">.</label>
                    <label class="checkbox">
                        @Html.CheckBoxFor(e => e.bDataDiferente)
                        <i></i>Alterar Data Base
                    </label>
                </section>
                @if (Model.bDataDiferente)
                {
                    <div id="divDataBase">
                        <section class="col col-3">
                            <label class="label">@Html.LabelFor(e => e.dDataBase)</label>
                            <label class="input">
                                @Html.EditorFor(l => l.dDataBase, new { value = @Model.dDataBase })
                            </label>
                        </section>
                    </div>
                }
                else
                {
                    <div id="divDataBase" style="display: none;">
                        <section class="col col-3">
                            <label class="label">@Html.LabelFor(e => e.dDataBase)</label>
                            <label class="input">
                                @Html.EditorFor(l => l.dDataBase, new { value = @Model.dDataBase })
                            </label>
                        </section>
                    </div>
                }
            </div>
        </div>
        <div class="row">
            <section class="col col-6">
                <label class="label">@Html.LabelFor(e => e.sAccountDesc)</label>
                <label class="input">
                    <strong>@Model.sAccountDesc</strong>
                </label>
            </section>
        </div>
        <div class="row">
            <section class="col col-3">
                <label class="label">@Html.LabelFor(e => e.dData)</label>
                <label class="input">
                    @Html.EditorFor(l => l.dData, new { value = @Model.dData })
                </label>
            </section>
        </div>
        <div class="row">
            <table class="table table-bordered table-hover col-lg-12" style="font-size: inherit;">
                <thead>
                    <tr>
                        <th class="col-sm-1 text-align-center" style="display:none;">Identificador interno</th>
                        <th class="col-sm-4 text-align-center">Pago</th>
                        <th class="col-sm-4 text-align-center">Parcela</th>
                        <th class="col-sm-4 text-align-center">Valor</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.listaItens.Count; i++)
                    {
                        Model.listaItens[i].dValor = Model.listaItens[i].dValor * 100;
                        <tr>
                            <td style="display:none;">
                                @Html.TextBoxFor(e => e.listaItens[i].sID, new { @readonly = "readonly", @class = "form-control", style = "display:none;" })
                            </td>
                            <td>
                                @Html.TextBoxFor(e => e.listaItens[i].bPago, new { @readonly = "readonly", @class = "form-control", style = "display:none;" })
                                @if (Model.listaItens[i].bPago)
                                {
                                    <strong>Sim</strong>
                                }else
                                {
                                    <Strong>Não</Strong>
                                }
                            </td>
                            <td>
                                @Html.TextBoxFor(e => e.listaItens[i].iParcela, new { @readonly = "readonly", @class = "form-control", style = "text-align: right;" })
                            </td>
                            <td>
                                @if (Model.listaItens[i].bPago)
                                {
                                    @Html.TextBoxFor(e => e.listaItens[i].dValor, new { @readonly = "readonly", @class = "form-control money", style = "text-align: right;" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(e => e.listaItens[i].dValor, new { @class = "form-control money", style = "text-align: right;" })
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </fieldset>
    <footer>
        <button type="submit" class="btn btn-primary" id="btnGravar" value="Gravar">
            Gravar
        </button>
    </footer>

}

<script type="text/javascript">
    $(document).ready(function () {
        $('.money').mask('000000000000000,00', { reverse: true });
        mostraOpcaoDataBase();
        $("#sDescricao").focus();
    });
    $("#bDataDiferente").change(function () {
        if (this.checked) {
            $('#dDataBase').val($('#dData').val());
            $('#divDataBase').show();
        } else {
            $('#divDataBase').hide();
        }
    });

    $("#sNotificationID").change(function () {
        mostraOpcaoDataBase();
    });

    function mostraOpcaoDataBase() {
        valor = $('#sNotificationID').val();
        if (valor != "") {
            $('#divMostrarOpcaoDataBase').show();
        } else {
            $('#divMostrarOpcaoDataBase').hide();
        }
    }

    $("#formLancamento").bind("submit", function (e) {
        // On submit disable form submit button
        $('#btnGravar', this).attr('disabled', 'disabled');
    });

    function retornoProcessamento(content) {
        $("#btnGravar").prop("disabled", false);
        OnEndProccessMensagemComReload(content);
    }
</script>