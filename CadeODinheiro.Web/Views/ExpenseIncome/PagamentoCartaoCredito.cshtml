@model CadeODinheiro.Core.DTO.CCPaymentModel
@{
    ViewBag.Title = "PagamentoCartaoCredito";
    Layout = "~/Views/Shared/_ContentFormLayout.cshtml";
}

@section headerWidget{
    <h2>Pagamento de Cartão de Crédito</h2>
    &nbsp;&nbsp;<i id="divLoading" style="display: none" class="fa fa-cog fa-2x fa-spin"></i>
}

@using (Ajax.BeginForm("PagamentoCartaoCredito", "ExpenseIncome", new AjaxOptions()
{
    HttpMethod = "Post",
    LoadingElementId = "divLoading",
    OnSuccess = "retornoProcessamento"
},
    new { @class = "smart-form", @id = "formPagtoCC" }))
{
    @Html.AntiForgeryToken()
    <fieldset style="padding: 0px 15px 0px;">
        <div class="row">
            @Html.TextBoxFor(e => e.sListaGastosID, new { @readonly = "readonly", style = "display: none;" })
            <section class="col col-6">
                <label class="label">Cartões de Crédito</label>
                <label class="select">
                    @Html.DropDownListFor(x => x.sAccountID, Model.listaContas, new { @class = "input-sm" })
                    <i></i>
                </label>
            </section>            
        </div>

        <div class="row">
            <table style="width: 100%;">
                <tr>
                    <td style="width: 50%;">
                        <table class="table table-bordered col-xs-12 col-sm-12 col-md-12 col-lg-12" style="font-size: small;">
                            <thead>
                                <tr>
                                    <th class="col-xs-2 col-sm-2 col-md-2 col-lg-2 text-align-left">Data</th>
                                    <th class="col-xs-7 col-sm-7 col-md-7 col-lg-7 text-align-left">Descrição</th>
                                    <th class="col-xs-2 col-sm-2 col-md-2 col-lg-2 text-align-right">Valor</th>
                                    <th class="col-xs-1 col-sm-1 col-md-1 col-lg-1 text-align-center">Selecionar</th>
                                </tr>
                            </thead>
                            <tbody id="CorpoTabelaGastos"></tbody>
                        </table>
                    </td>
                    <td style="width: 50%; vertical-align: top;">
                        <div>
                            <section style="width: 97%; margin-left: 20px;">
                                <label class="label">@Html.LabelFor(e => e.sAccountPaymentID)</label>
                                <label class="select">
                                    @Html.DropDownListFor(x => x.sAccountPaymentID, Model.listaContasPagamento, new { @class = "input-sm" })
                                    <i></i>
                                </label>
                            </section>
                            <section style="width: 97%; margin-left: 20px;">
                                <label class="label">@Html.LabelFor(e => e.sDescricao)</label>
                                <label class="input">
                                    @Html.EditorFor(e => e.sDescricao)
                                </label>
                            </section>
                            <section style="width: 97%; margin-left: 20px;">
                                <label class="label">@Html.LabelFor(e => e.sCategoryID)</label>
                                <label class="select">
                                    @Html.DropDownListFor(x => x.sCategoryID, Model.listaCategorias, new { @class = "input-sm" })
                                    <i></i>
                                </label>
                            </section>
                            <section style="width: 30%; margin-left: 20px;">
                                <label class="label">@Html.LabelFor(e => e.dData)</label>
                                <label class="input">
                                    @Html.EditorFor(l => l.dData, new { value = @Model.dData })
                                </label>
                            </section>
                            <section style="width: 30%; margin-left: 20px;">
                                <label class="label">@Html.LabelFor(e => e.dValorTotal)</label>
                                <label class="input" id="valorTotal">
                                    <strong id="idValorTotal" style="font-size: xx-large;">
                                        @Html.DisplayFor(e => e.dValorTotal)
                                    </strong>
                                </label>
                            </section>
                            <section style="width: 97%; margin-left: 20px;">
                                <button type="submit" class="btn btn-primary btn-lg" id="btnGravar">Gerar Pagamento do Cartão de Crédito</button>
                            </section>
                        </div>
                    </td>
                </tr>                
            </table>
        </div>
    </fieldset>
    <footer></footer>
}

<script type="text/javascript">
    $(document).ready(function () 
    {
        CarregaGastosCartao();
    });

    $("#sAccountID").change(function () {
        CarregaGastosCartao();
        $("#idValorTotal").html("0");
        $("#sListaGastosID").val("");    
    });

    function AdicionaGastoPagamento(gastoID, valor)
    {
        var elementoTr = document.getElementById("tr_" + gastoID);
        elementoTr.style.backgroundColor = 'aquamarine';

        var listaGastos = $("#sListaGastosID").val();
        listaGastos = listaGastos + gastoID + ";";
        $("#sListaGastosID").val(listaGastos);

        var valorTotal = parseFloat($("#idValorTotal").html());
        valor = valor.replace(",", ".");
        var valorItem = parseFloat(valor);
        valorTotal = valorTotal + valorItem;
        valorTotal = Math.round(valorTotal*100)/100;
        $("#idValorTotal").html(valorTotal);
    }

    function CarregaGastosCartao()
    {
        $.ajax({
            url: "ExpenseIncome/ListaGastosCartaoCredito",
            type: "get",
            data: { sCartaoCreditoID: $("#sAccountID").val() },
            success: function (response, textStatus, jqXHR) {
                if (response.Sucesso) {
                    htmlCorpo = "";
                    for (i = 0; i < response.Lista.length; i++) {
                        htmlCorpo = htmlCorpo + "<tr id=\"tr_" + response.Lista[i].sID + "\">";
                        htmlCorpo = htmlCorpo + "<td align=\"left\">" + response.Lista[i].sData + "</td>";
                        htmlCorpo = htmlCorpo + "<td align=\"left\">" + response.Lista[i].sDescricao + "</td>";
                        htmlCorpo = htmlCorpo + "<td align=\"right\">" + response.Lista[i].sValor + "</td>";
                        htmlCorpo = htmlCorpo + "<td align=\"center\"><a href=\"javascript:void(0);\" onClick=\"AdicionaGastoPagamento('" + response.Lista[i].sID + "', '" + response.Lista[i].sValor + "');\" class=\"btn btn-default\"><i class=\"fa fa-credit-card\"></i></a></td>";

                        htmlCorpo = htmlCorpo + "</tr>";
                    }
                    $("#CorpoTabelaGastos").html(htmlCorpo);
                }
                else {
                    exibirMensagemErro("Erro", response.Mensagem);
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                alert("error");
            },
            // callback handler that will be called on completion
            // which means, either on success or error
            complete: function () {
            }
        });
    }

    $("#formPagtoCC").bind("submit", function (e) {
        // On submit disable form submit button
        $('#btnGravar', this).attr('disabled', 'disabled');
    });

    function retornoProcessamento(content) {
        $("#btnGravar").prop("disabled", false);
        OnEndProccessMensagemComReload(content);
    }
</script>

    